---
globs: *.spec.ts,*.test.ts,*.e2e-spec.ts
---

# 測試規則

## 測試框架

- 使用標準的 Jest 框架進行測試
- 為每個控制器和服務撰寫測試
- 為每個 API 模組撰寫端到端測試
- 為每個控制器添加 admin/test 方法作為煙霧測試

## 測試結構

### 單元測試

- 遵循 Arrange-Act-Assert 慣例
- 清楚命名測試變數
  - 遵循慣例：inputX, mockX, actualX, expectedX
- 為每個公開函式撰寫單元測試
- 使用測試替身模擬依賴
  - 除了執行成本不高的第三方依賴

### 驗收測試

- 為每個模組撰寫驗收測試
- 遵循 Given-When-Then 慣例
- 測試完整的業務流程

## 測試命名

- 測試檔案使用 `.spec.ts` 或 `.test.ts` 結尾
- 端到端測試使用 `.e2e-spec.ts` 結尾
- 測試描述使用清楚的英文描述
- 測試名稱應該描述預期行為

## 測試組織

- 按功能分組測試
- 使用 `describe` 區塊組織相關測試
- 每個測試應該獨立且可重複執行
- 清理測試資料和模擬對象

## 模擬和存根

- 使用 Jest 的內建模擬功能
- 為外部依賴建立模擬
- 模擬資料庫調用
- 模擬 HTTP 請求

## 測試數據

- 使用有意義的測試資料
- 避免使用生產資料
- 建立測試工廠函數
- 使用測試資料庫

## 斷言

- 使用具體的斷言
- 驗證預期的行為
- 檢查錯誤情況
- 驗證副作用

## 覆蓋率

- 目標是高覆蓋率但不強制 100%
- 重點測試核心業務邏輯
- 測試錯誤處理路徑
- 測試邊界條件
